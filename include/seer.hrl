-define(APP, seer).
-define(ENV(Key, Default), application:get_env(?APP, Key, Default)).
-define(ENV_PREFIX, prefix).
-define(ENV_MODE, mode).
-define(ENV_POLL_INTERVAL, poll_interval).
-define(ENV_CARBON_HOST, carbon_host).
-define(ENV_CARBON_PORT, carbon_port).
-define(ENV_MAX_BUFFER_SIZE, max_buffer_size).
-define(DEFAULT_PREFIX, <<"seer">>).
-define(DEFAULT_MODE, carbon).
-define(DEFAULT_POLL_INTERVAL, 10000).
-define(DEFAULT_CARBON_HOST, localhost).
-define(DEFAULT_CARBON_PORT, 2003).
-define(DEFAULT_MAX_BUFFER_SIZE, 60).
-define(TCP_RECONNECTION_INTERVAL, 250).

-type carbon_string() :: binary().
-type carbon_batch() :: [carbon_string()].
-type metric_name() :: binary().
-type metric_type() :: counter | gauge | dist | histo.
-type read_value() :: term().
-type read_metric() :: {metric_type(), metric_name(), read_value()}.
-type histo_bucket_key() :: {non_neg_integer(), non_neg_integer()}.
-type histo_bucket() :: {histo_bucket_key(), non_neg_integer()}.
-type histo_percentile() :: p50 | p90 | p99.
-type histo_percentile_index() :: {histo_percentile(), non_neg_integer()}.
-type dist_stats() :: [integer()].
-type dist_stats_indexes() :: [integer()].
-type dist_samples() :: [integer()].

